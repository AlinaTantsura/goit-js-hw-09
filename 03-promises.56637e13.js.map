{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAiBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,CAACN,SAAUA,EAAUC,MAAOA,IAGpCM,EAAO,CAACP,SAAUA,EAAUC,MAAOA,GAAO,GAE3CA,EAAM,IACRQ,MAAMC,GAAQhB,EAAAiB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,SAAYY,OAC5EH,GAAUhB,EAAAiB,OAAMG,QAAC,sBAASd,QAA8BC,Q,CA5BhEL,EAAKmB,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOvB,EAAKwB,SAASnB,MAAMoB,OAC5C,MAAMC,EAAYH,OAAOvB,EAAKwB,SAASG,KAAKF,OACtCG,EAAcL,OAAOvB,EAAKwB,SAASK,OAAOJ,OAEhD,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAaE,IAC/B3B,EAAc2B,EAAI,EAAGR,GACrBA,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(event) {\n  event.preventDefault();\n  let delayInput = Number(form.elements.delay.value);\n  const stepInput = Number(form.elements.step.value);\n  const amountInput = Number(form.elements.amount.value);\n\n  for (let i = 0; i < amountInput; i++){\n    createPromise(i + 1, delayInput);\n    delayInput += stepInput;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position: position, delay: delay});\n      } else {\n        // Reject\n        reject({position: position, delay: delay});\n      }\n    }, delay);\n  }).then((obj) => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n  .catch((obj) => Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","obj","Notify","success","catch","failure","addEventListener","event","preventDefault","delayInput","Number","elements","value","stepInput","step","amountInput","amount","i"],"version":3,"file":"03-promises.56637e13.js.map"}