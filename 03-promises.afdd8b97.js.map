{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOP,EAAKQ,SAASC,MAAMC,OAC5C,MAAMC,EAAYJ,OAAOP,EAAKQ,SAASI,KAAKF,OACtCG,EAAcN,OAAOP,EAAKQ,SAASM,OAAOJ,OAEhD,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAaE,IAC/BC,cAAcD,EAAI,EAAGT,GACrBA,GAAcK,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(event) {\n  event.preventDefault();\n  let delayInput = Number(form.elements.delay.value);\n  const stepInput = Number(form.elements.step.value);\n  const amountInput = Number(form.elements.amount.value);\n\n  for (let i = 0; i < amountInput; i++){\n    createPromise(i + 1, delayInput);\n    delayInput += stepInput;\n  }\n}\n// function createPromise(position, delay) {\n  \n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//     if (shouldResolve) {\n//       // Fulfill\n//       resolve(console.log(`${position} promise is resolve`));\n//     } else {\n//       // Reject\n//       reject(console.log(`${position} promise is reject`));\n//     }\n//     }, delay);\n//   })\n//   return promise;\n// }\n// \n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }"],"names":["$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","delayInput","Number","elements","delay","value","stepInput","step","amountInput","amount","i","createPromise"],"version":3,"file":"03-promises.afdd8b97.js.map"}